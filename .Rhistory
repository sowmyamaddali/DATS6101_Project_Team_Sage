dataset<-read.csv("C:/Users/Jerrick/Downloads/R Project/full_filled_stroke_data (1).csv")
head(dataset)
str(dataset)
df<-table(dataset$stroke)
barplot(df,main='Distribution of Target Variable (Stroke)',col='Red')
resi<-table(dataset$Residence_type)
barplot(resi,main="Distribution of Residence-Type",col='orange')
library(ggplot2)
# grouped bar plot
ggplot(dataset,
aes(x = Residence_type,
fill = drv)) +
geom_bar(position = "dodge")
library(ggplot2)
# grouped bar plot
ggplot(dataset,
aes(x = Residence_type,
fill = dataset$stroke)) +
geom_bar(position = "dodge")
library(ggplot2)
# grouped bar plot
ggplot(dataset,
aes(x = Residence_type,
fill = stroke)) +
geom_bar(position = "dodge")
library(ggplot2)
ggplot(dataset,
aes(x = Residence_type,fill = stroke)) +geom_bar(position = "dodge")
library(ggplot2)
ggplot(dataset,aes(x = Residence_type,fill = stroke)) +geom_bar(position = "dodge")
library(ggplot2)
ggplot(dataset,aes(x = Residence_type,fill = stroke),col='yellow') +geom_bar(position = "dodge")
Residence_type_plt2 <- dataset %>%
ggplot() +
geom_bar(aes(x = Residence_type, fill = Stroke), position = "fill") +
scale_fill_manual(values = c(wes_palette("Royal2")[2], wes_palette("Royal2")[5])) +
theme_minimal() +
theme(plot.title = element_text(face = "bold")) +
labs(y = "Proportion",  x = "Residence Type", title = "Residence Type Distribution by Stroke Status")
Residence_type_plt2 <- dataset%>%
ggplot() +
geom_bar(aes(x = Residence_type, fill = Stroke), position = "fill") +
scale_fill_manual(values = c(wes_palette("Royal2")[2], wes_palette("Royal2")[5])) +
theme_minimal() +
theme(plot.title = element_text(face = "bold")) +
labs(y = "Proportion",  x = "Residence Type", title = "Residence Type Distribution by Stroke Status")
Residence_type_plt2 <- ggplot(dataset) +
geom_bar(aes(x = Residence_type, fill = Stroke), position = "fill") +
scale_fill_manual(values = c(wes_palette("Royal2")[2], wes_palette("Royal2")[5])) +
theme_minimal() +
theme(plot.title = element_text(face = "bold")) +
labs(y = "Proportion",  x = "Residence Type", title = "Residence Type Distribution by Stroke Status")
library(ggplot2)
ggplot(dataset,aes(x = Residence_type,fill = stroke)) +geom_bar()
Residence_type_plt2 <- ggplot(dataset) +
geom_bar(aes(x = Residence_type, fill = Stroke), position = "fill") +
theme_minimal() +
theme(plot.title = element_text(face = "bold")) +
labs(y = "Proportion",  x = "Residence Type", title = "Residence Type Distribution by Stroke Status")
Residence_type_plt2 <- ggplot(dataset) +
geom_bar(aes(x = Residence_type, fill = Stroke), position = "fill") +
theme_minimal() +
theme(plot.title = element_text(face = "bold")) +
labs(y = "Proportion",  x = "Residence Type", title = "Residence Type Distribution by Stroke Status")
Residence_type_plt2
Residence_type_plt2 <- ggplot(dataset) +
geom_bar(aes(x = Residence_type, fill = Stroke), position = "fill") +
theme_minimal() +
theme(plot.title = element_text(face = "bold")) +
labs(y = "Proportion",  x = "Residence Type", title = "Residence Type Distribution by Stroke Status")
ggarrange(Residence_type_plt2)
df<-table(stroke_df$stroke)
stroke_df = read.csv("healthcare-dataset-stroke-data.csv")
stroke_df = subset(stroke_df, select = -c(id))
head(stroke_df)
# Getting the summary of the dataframe
summary(stroke_df)
# Looking at the structure of the Dataframe
str(stroke_df)
# changing the variables to categorical variables and numerical variables
stroke_df$gender <- as.factor(stroke_df$gender)
stroke_df$hypertension <- as.factor(stroke_df$hypertension)
stroke_df$heart_disease <- as.factor(stroke_df$heart_disease)
stroke_df$ever_married <- as.factor(stroke_df$ever_married)
stroke_df$bmi <- as.numeric(stroke_df$bmi)
stroke_df$stroke<- as.factor(stroke_df$stroke)
str(stroke_df)
# Finding if there are any NA's in the dataset
paste("The NA's in the dataset is:",sum(is.na(stroke_df)))
summary(stroke_df)
# There are 201 NA's in BMI. Replacing those variables with mean of BMI
stroke_df$bmi[is.na(stroke_df$bmi)] <- mean(stroke_df$bmi,na.rm = TRUE)
# Finding if there are any NA's after imputation of null values
paste("The NA's in the dataset is:",sum(is.na(stroke_df)))
df<-table(stroke_df$stroke)
barplot(df,main='Distribution of Target Variable (Stroke)',col=c('green','red'))
dat=table(stroke_df$stroke,stroke_df$smoking_status)
barplot(dat,
main = "People segregated based on their smoking habbits",
xlab = "Smoking status",
ylab = "Number of people",
col = c("Green","red"),
beside = TRUE
)
resi=table(stroke_df$stroke,stroke_df$Residence_type)
barplot(resi,
main = "Distribution of Resident People affected by Brain Stroke",
xlab = "Residence_type",
ylab = "Number of people",
col = c("Red","Orange"),
beside = TRUE
)
knitr::opts_chunk$set(echo = FALSE)
options(scipen = 999,  digits = 3, big.mark=",", warn = -1)
loadPkg = function(x) { if (!require(x,character.only=T, quietly =T)) { install.packages(x,dep=T,repos="http://cran.us.r-project.org"); if(!require(x,character.only=T)) stop("Package not found") } }
library(ggplot2)
library(gridExtra)
library(corrplot)
library(ROSE)
library(dplyr)
stroke_df = read.csv("healthcare-dataset-stroke-data.csv")
str(stroke_df)
stroke_df = subset(stroke_df, select = -c(id))
# converting the numeric variables to factor variables
stroke_df$gender = as.factor(stroke_df$gender)
stroke_df$hypertension = as.factor(stroke_df$hypertension)
stroke_df$heart_disease = as.factor(stroke_df$heart_disease)
stroke_df$ever_married = as.factor(stroke_df$ever_married)
stroke_df$bmi = as.numeric(stroke_df$bmi)
stroke_df$stroke = as.factor(stroke_df$stroke)
# To get the summary statistics of the dataset
summary(stroke_df)
# To find the NA's in the dataset
paste("The NA's in the dataset is:",sum(is.na(stroke_df)))
# Replacing NA values with average BMI value
stroke_df$bmi[is.na(stroke_df$bmi)] = mean(stroke_df$bmi,na.rm = TRUE)
paste("The NA's in the dataset after imputation of BMI with mean is:",sum(is.na(stroke_df)))
# since we had only 1 data point in others category for gender we are removing it
stroke_df = subset(stroke_df,gender!="Other")
summary(stroke_df)
# subsetting the data for various analyses
stroke_1 = subset(stroke_df, stroke == 1)
stroke_0 = subset(stroke_df, stroke == 0)
stroke_1_female = subset(stroke_df, stroke == 1 & gender == "Female")
stroke_1_male = subset(stroke_df, stroke == 1 & gender == "Male")
# creating different columns for bmi, age and average_glucose_level based on different bucketing for each variables
dat <- within(stroke_df, {
bmi.cat = NA # need to initialize variable
bmi.cat[bmi < 18.5] = "underweight"
bmi.cat[bmi >= 18.5 & bmi < 25] = "normal"
bmi.cat[bmi >= 25 & bmi < 30] = "overweight"
bmi.cat[bmi >= 30 & bmi < 40] = "obesity"
bmi.cat[bmi >=40] = "severe obesity"
avg_gluc.cat = NA # need to initialize variable
avg_gluc.cat[avg_glucose_level < 60] = "Below 60"
avg_gluc.cat[avg_glucose_level >= 60 & avg_glucose_level < 90] = "60 - 90"
avg_gluc.cat[avg_glucose_level >= 90 & avg_glucose_level < 120] = "90 - 120"
avg_gluc.cat[avg_glucose_level >= 120 & avg_glucose_level < 180] = "120 - 180"
avg_gluc.cat[avg_glucose_level >= 180 & avg_glucose_level < 273] = "180 - 273"
age.cat = NA
age.cat[age<=20] = "Under 20"
age.cat[age>=21 & age<= 40 ] = "20-40"
age.cat[age>=41 & age<= 60 ] = "40-60"
age.cat[age>=61 & age<= 80 ] = "60-80"
age.cat[age>=80 ] = "above 80"
} )
dat$bmi.cat<- factor(dat$bmi.cat,levels= c("underweight","normal","overweight","obesity","severe obesity" ))
dat$avg_gluc.cat<- factor(dat$avg_gluc.cat,levels= c("Below 60","60 - 90","90 - 120","120 - 180","180 - 273" ))
dat$age.cat<- factor(dat$age.cat,levels= c("Under 20","20-40","40-60","60-80","above 80"))
ggplot(stroke_df, aes(x=age)) +  geom_density(fill="skyblue", color="skyblue", alpha=0.5)+ theme_bw() + theme()+ ggtitle("Distribution for age")
ggplot(stroke_df, aes(x=bmi)) +  geom_density(fill="pink", color="pink", alpha=0.5)+ theme_bw() + theme()+ ggtitle("Distribution for BMI")
ggplot(stroke_df, aes(x=avg_glucose_level)) +  geom_density(fill="lightgreen", color="lightgreen", alpha=0.5)+ theme_bw() + theme()+ ggtitle("Distribution for Average Glucose Level")
ggplot(stroke_df, aes(x=stroke,fill=stroke))+geom_bar()+ggtitle("Distribution of Target variable (Stroke)")+ theme_bw() + theme()+ xlab("Stroke") + ylab("Count of people")
ggplot(stroke_1,aes(x=work_type, fill= smoking_status))+geom_bar(position = "dodge")+ggtitle("Distribution of people who had a stroke based on their smoking habits")+ theme_bw() + theme()+ xlab("Work Type") + ylab("Count of people ")
ggplot(stroke_1_female,aes(x=work_type, fill= smoking_status))+geom_bar(position = "dodge")+ggtitle("Distribution of females who had a stroke based on their smoking habits")+ theme_bw() + theme()+ xlab("Work Type") + ylab("Count of people ")
ggplot(stroke_1_male,aes(x=work_type, fill= smoking_status))+geom_bar(position = "dodge")+ggtitle("Distribution of males who had a stroke based on their smoking habits")+ theme_bw() + theme()+ xlab("Work Type") + ylab("Count of people ")
ctest1 = chisq.test(dat$smoking_status, dat$stroke)
ctest2 = chisq.test(dat$work_type, dat$stroke)
ctest1
ctest2
ggplot(stroke_1, aes(x = age, fill=stroke))+ geom_density(alpha = 0.3)+ ggtitle("Density plot for age of people who had stroke")+ theme_bw() + theme()
one.way <- aov(age ~ stroke, data = stroke_df)
summary(one.way)
ggplot(stroke_1, aes(x=bmi, y=age, color=stroke))+geom_point(size=3)+ ggtitle("Scatter plot for age vs bmi for people who had a stroke")
ggplot(dat, aes(x=bmi.cat,y = age, fill=stroke))+geom_boxplot()+ ggtitle("Boxplot for Age vs BMI(categorical)")
ctest1 = chisq.test(dat$bmi.cat, dat$stroke)
ctest1
stroke_1_dat = subset(dat, stroke==1 )
ggplot(stroke_1_dat, aes(fill=stroke, y = age, x = avg_gluc.cat))+ geom_boxplot()+ ggtitle("Boxplot for Age vs Average Gluclose level(Categorical) for people with stroke")
ctest1 = chisq.test(dat$avg_gluc.cat, dat$stroke)
ctest1
ggplot(data = stroke_df, aes(x=as.character(hypertension), y=age, fill=hypertension)) +
geom_boxplot() +
labs(title="Age distribution by hypertension", x="hypertension", y="age")
ctest3 = chisq.test(stroke_df$hypertension, stroke_df$stroke)
ctest3
ggplot(data = stroke_df, aes(x=as.character(heart_disease ), y=age, fill=heart_disease)) +
geom_boxplot() +
labs(title="Age distribution by heart_disease ", x="heart_disease ", y="age")
ggplot(data = stroke_df, aes(x=as.character(heart_disease ), y=age, fill=heart_disease)) +
geom_boxplot() +
labs(title="Age distribution by heart_disease ", x="heart_disease ", y="age")
